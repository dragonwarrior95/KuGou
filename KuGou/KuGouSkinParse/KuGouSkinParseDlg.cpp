
// KuGouSkinParseDlg.cpp : 实现文件
//

#include "stdafx.h"
#include "KuGouSkinParse.h"
#include "KuGouSkinParseDlg.h"

#include "SkinFile.h"


#pragma comment(lib, "advapi32")

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// 用于应用程序“关于”菜单项的 CAboutDlg 对话框

class CAboutDlg : public CDialog
{
public:
	CAboutDlg();

// 对话框数据
	enum { IDD = IDD_ABOUTBOX };

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持

// 实现
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)
END_MESSAGE_MAP()


// CKuGouSkinParseDlg 对话框




CKuGouSkinParseDlg::CKuGouSkinParseDlg(CWnd* pParent /*=NULL*/)
	: CDialog(CKuGouSkinParseDlg::IDD, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CKuGouSkinParseDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CKuGouSkinParseDlg, CDialog)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()


// CKuGouSkinParseDlg 消息处理程序

BOOL CKuGouSkinParseDlg::OnInitDialog()
{
	CDialog::OnInitDialog();

	// 将“关于...”菜单项添加到系统菜单中。

	// IDM_ABOUTBOX 必须在系统命令范围内。
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// 设置此对话框的图标。当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m_hIcon, TRUE);			// 设置大图标
	SetIcon(m_hIcon, FALSE);		// 设置小图标

	// TODO: 在此添加额外的初始化代码
	// 获取酷狗图片皮肤
	CString strExePath = GetExePath("");
	MessageBox(strExePath, strExePath,  0);
	char* pszExePath = NULL;
	pszExePath = strExePath.GetBuffer(0);
	strExePath.ReleaseBuffer();
	PathRemoveFileSpec(pszExePath) ;
	strExePath.Format(_T("%s\\kugou.skn"), pszExePath);
	CSkinFile skinFile;
	skinFile.SkinFileParse(strExePath);
	return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE
}

void CKuGouSkinParseDlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CDialog::OnSysCommand(nID, lParam);
	}
}

// 如果向对话框添加最小化按钮，则需要下面的代码
//  来绘制该图标。对于使用文档/视图模型的 MFC 应用程序，
//  这将由框架自动完成。

void CKuGouSkinParseDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 用于绘制的设备上下文

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 使图标在工作区矩形中居中
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 绘制图标
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialog::OnPaint();
	}
}

//当用户拖动最小化窗口时系统调用此函数取得光标
//显示。
HCURSOR CKuGouSkinParseDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}


// 获取可执行文件的安装路径
CString CKuGouSkinParseDlg::GetExePath(CString v_strExeName)
{		
	// Dynamic allocation will be used.
	HKEY hKey;
	TCHAR szExePath[MAX_PATH];
	memset(szExePath,0,sizeof(szExePath));
	DWORD dwBufLen = MAX_PATH;
	LONG lRet;

	// 下面是打开注册表, 只有打开后才能做其他操作 
	lRet = RegOpenKeyEx(HKEY_LOCAL_MACHINE,					// 要打开的根键 
						TEXT("Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\酷狗音乐"),	// 要打开的子子键 
						0,									// 这个一定要为0 
						KEY_QUERY_VALUE,					//  指定打开方式,此为读 
						&hKey);								// 用来返回句柄 

	if(lRet != ERROR_SUCCESS)// 判断是否打开成功 
		return _T("");

	//下面开始查询 
	lRet = RegQueryValueEx( hKey,					// 打开注册表时返回的句柄 
							TEXT("UninstallString"),		//要查询的名称,qq安装目录记录在这个保存 
							NULL,					// 一定为NULL或者0 
							NULL,
							(LPBYTE)szExePath,	// 我们要的东西放在这里 
							&dwBufLen);

	if(lRet != ERROR_SUCCESS)  // 判断是否查询成功 
	{
		RegCloseKey(hKey);
		return _T("");
	}
	
	RegCloseKey(hKey);

	return szExePath;
}
